package com.idega.block.creditcard.model;

import java.io.Serializable;

import com.idega.block.creditcard.CreditCardUtil;
import com.idega.idegaweb.IWMainApplication;
import com.idega.util.CoreConstants;
import com.idega.util.StringUtil;

public class ValitorPayPushFundsData extends ValitorPayMainRequestData implements Serializable {

	private static final long serialVersionUID = 8129455661866333775L;

	private String cvc;

	private String transactionType = "GeneralFundsDisbursement";	//"GeneralFundsDisbursement"
	private Integer systemTraceAuditNumber; 						//451019 - System trace audit number e.g. unique identifier generated by the user for monitoring or settlement purposes.
	private String correlationId;									//"12674db5-ff2f-4d61-b80e-49a0eebb0e86" - Unique id for the request from the merchant system, for tracked logging and duplication check.
	private String agreementNumber;									//"698762",
	private String terminalId;										//"19698416",
	private String transactionDateTime;								//"2023-06-30T06:42:16.146419+00:00"
	private String systemCalling = "MerchantSystemName V1.0";		//"MerchantSystemName V1.0"



	public ValitorPayPushFundsData() {
		super();

		transactionType = "GeneralFundsDisbursement";
		systemCalling = IWMainApplication.getDefaultIWMainApplication().getSettings().getProperty("valitor_pay.caller");
	}

	public ValitorPayPushFundsData(
			Integer amount,
			String currency,
			String cardNumber,
			String expirationMonth,
			String expirationYear,
			String cvc,
			Integer systemTraceAuditNumber,
			String correlationId,
			String agreementNumber,
			String terminalId,
			String transactionDateTime
	) {
		this();

		this.systemTraceAuditNumber = systemTraceAuditNumber;
		this.correlationId = correlationId;
		this.agreementNumber = agreementNumber;
		this.terminalId = terminalId;
		this.transactionDateTime = transactionDateTime;

		setAmount(amount);
		setCurrency(currency);
		setCardNumber(cardNumber);
		setExpirationMonth(expirationMonth);
		if (!StringUtil.isEmpty(expirationYear)) {
			if (expirationYear.length() == 2) {
				expirationYear = "20" + expirationYear;
			}
			setExpirationYear(expirationYear);
		}

		//THOSE FIELDS are not supported by web service "/Payment/PushFunds".
		setCardholderDeviceType(null);
		this.cvc = null;
	}



	public String getCvc() {
		return cvc;
	}

	public void setCvc(String cvc) {
		this.cvc = cvc;
	}

	public String getTransactionType() {
		return transactionType;
	}

	public void setTransactionType(String transactionType) {
		this.transactionType = transactionType;
	}

	public Integer getSystemTraceAuditNumber() {
		return systemTraceAuditNumber;
	}

	public void setSystemTraceAuditNumber(Integer systemTraceAuditNumber) {
		this.systemTraceAuditNumber = systemTraceAuditNumber;
	}

	public String getCorrelationId() {
		return correlationId;
	}

	public void setCorrelationId(String correlationId) {
		this.correlationId = correlationId;
	}

	public String getAgreementNumber() {
		return agreementNumber;
	}

	public void setAgreementNumber(String agreementNumber) {
		this.agreementNumber = agreementNumber;
	}

	public String getTerminalId() {
		return terminalId;
	}

	public void setTerminalId(String terminalId) {
		this.terminalId = terminalId;
	}

	public String getTransactionDateTime() {
		return transactionDateTime;
	}

	public void setTransactionDateTime(String transactionDateTime) {
		this.transactionDateTime = transactionDateTime;
	}

	public String getSystemCalling() {
		return systemCalling;
	}

	public void setSystemCalling(String systemCalling) {
		this.systemCalling = systemCalling;
	}

	@Override
	public String toString() {
		return	"Name on card: " + getDisplayName() +
				", number: " + (!StringUtil.isEmpty(getCardNumber()) ? CreditCardUtil.getMaskedCreditCardNumber(getCardNumber()) : CoreConstants.EMPTY) +
				", expires (MM/YY): " + getExpirationMonth() + CoreConstants.SLASH + getExpirationYear() +
				". Currency: " + getCurrency() +
				". systemTraceAuditNumber: " + getSystemTraceAuditNumber() +
				". correlationId: " + getCorrelationId() +
				". agreementNumber: " + getAgreementNumber() +
				". systemTraceAuditNumber: " + getSystemTraceAuditNumber() +
				". terminalId: " + getTerminalId() +
				". transactionDateTime: " + getTransactionDateTime() +
				". transactionType: " + getTransactionType() +
				". systemCalling: " + getSystemCalling();
	}

}